{"version":3,"sources":["../../src/routines/bootstrap.js"],"names":["log","Logger","child","namespace","global","GLOBAL_AGENT","bootstrapped","warn","HTTP_PROXY","process","env","GLOBAL_AGENT_HTTP_PROXY","NO_PROXY","GLOBAL_AGENT_NO_PROXY","info","configuration","isProxyConfigured","mustUrlUseProxy","url","getUrlProxy","UnexpectedStateError","eventEmitter","EventEmitter","httpAgent","HttpProxyAgent","http","globalAgent","httpsAgent","HttpsProxyAgent","https","semver","gte","version","get","request"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AAGA;;;;AAMA,MAAMA,GAAG,GAAGC,gBAAOC,KAAP,CAAa;AACvBC,EAAAA,SAAS,EAAE;AADY,CAAb,CAAZ;;wBAIqB;AACnBC,EAAAA,MAAM,CAACC,YAAP,GAAsBD,MAAM,CAACC,YAAP,IAAuB,EAA7C;;AAEA,MAAID,MAAM,CAACC,YAAP,CAAoBC,YAAxB,EAAsC;AACpCN,IAAAA,GAAG,CAACO,IAAJ,CAAS,gFAAT;AAEA;AACD;;AAEDH,EAAAA,MAAM,CAACC,YAAP,CAAoBC,YAApB,GAAmC,IAAnC,CATmB,CAWnB;;AACAF,EAAAA,MAAM,CAACC,YAAP,CAAoBG,UAApB,GAAiCC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,IAAuC,IAAxE,CAZmB,CAcnB;;AACAP,EAAAA,MAAM,CAACC,YAAP,CAAoBO,QAApB,GAA+BH,OAAO,CAACC,GAAR,CAAYG,qBAAZ,IAAqC,IAApE;AAEAb,EAAAA,GAAG,CAACc,IAAJ,CAAS;AACPC,IAAAA,aAAa,EAAEX,MAAM,CAACC;AADf,GAAT,EAEG,mCAFH;;AAIA,QAAMW,iBAAiB,GAAG,MAAM;AAC9B,WAAOZ,MAAM,CAACC,YAAP,CAAoBG,UAA3B;AACD,GAFD;;AAIA,QAAMS,eAAe,GAAIC,GAAD,IAAS;AAC/B,QAAI,CAACd,MAAM,CAACC,YAAP,CAAoBG,UAAzB,EAAqC;AACnC,aAAO,KAAP;AACD;;AAED,QAAI,CAACJ,MAAM,CAACC,YAAP,CAAoBO,QAAzB,EAAmC;AACjC,aAAO,IAAP;AACD;;AAED,WAAO,CAAC,qCAAqBM,GAArB,EAA0Bd,MAAM,CAACC,YAAP,CAAoBO,QAA9C,CAAR;AACD,GAVD;;AAYA,QAAMO,WAAW,GAAG,MAAM;AACxB,QAAI,CAACf,MAAM,CAACC,YAAP,CAAoBG,UAAzB,EAAqC;AACnC,YAAM,IAAIY,4BAAJ,CAAyB,gCAAzB,CAAN;AACD;;AAED,WAAO,8BAAchB,MAAM,CAACC,YAAP,CAAoBG,UAAlC,CAAP;AACD,GAND;;AAQA,QAAMa,YAAY,GAAG,IAAIC,eAAJ,EAArB;AAEA,QAAMC,SAAS,GAAG,IAAIC,uBAAJ,CAChBR,iBADgB,EAEhBC,eAFgB,EAGhBE,WAHgB,EAIhBM,cAAKC,WAJW,EAKhBL,YALgB,CAAlB;AAQA,QAAMM,UAAU,GAAG,IAAIC,wBAAJ,CACjBZ,iBADiB,EAEjBC,eAFiB,EAGjBE,WAHiB,EAIjBU,eAAMH,WAJW,EAKjBL,YALiB,CAAnB,CAvDmB,CA+DnB;AACA;;AACA,MAAIS,gBAAOC,GAAP,CAAWtB,OAAO,CAACuB,OAAnB,EAA4B,SAA5B,CAAJ,EAA4C;AAC1C;AACA;AACAP,kBAAKC,WAAL,GAAmBH,SAAnB,CAH0C,CAK1C;;AACAM,mBAAMH,WAAN,GAAoBC,UAApB;AACD,GAPD,MAOO;AACL;AACAF,kBAAKQ,GAAL,GAAW,+BAAeR,cAAKQ,GAApB,EAAyBV,SAAzB,CAAX,CAFK,CAIL;;AACAE,kBAAKS,OAAL,GAAe,+BAAeT,cAAKS,OAApB,EAA6BX,SAA7B,CAAf,CALK,CAOL;;AACAM,mBAAMI,GAAN,GAAY,+BAAeJ,eAAMI,GAArB,EAA0BN,UAA1B,CAAZ,CARK,CAUL;;AACAE,mBAAMK,OAAN,GAAgB,+BAAeL,eAAMK,OAArB,EAA8BP,UAA9B,CAAhB;AACD;AACF,C","sourcesContent":["// @flow\n\nimport EventEmitter from 'events';\nimport http from 'http';\nimport https from 'https';\nimport semver from 'semver';\nimport Logger from '../Logger';\nimport {\n  HttpProxyAgent,\n  HttpsProxyAgent\n} from '../classes';\nimport {\n  UnexpectedStateError\n} from '../errors';\nimport {\n  bindHttpMethod,\n  isUrlMatchingNoProxy,\n  parseProxyUrl\n} from '../utilities';\n\nconst log = Logger.child({\n  namespace: 'bootstrap'\n});\n\nexport default () => {\n  global.GLOBAL_AGENT = global.GLOBAL_AGENT || {};\n\n  if (global.GLOBAL_AGENT.bootstrapped) {\n    log.warn('found global.globalAgent; second attempt to bootstrap global-agent was ignored');\n\n    return;\n  }\n\n  global.GLOBAL_AGENT.bootstrapped = true;\n\n  // eslint-disable-next-line no-process-env\n  global.GLOBAL_AGENT.HTTP_PROXY = process.env.GLOBAL_AGENT_HTTP_PROXY || null;\n\n  // eslint-disable-next-line no-process-env\n  global.GLOBAL_AGENT.NO_PROXY = process.env.GLOBAL_AGENT_NO_PROXY || null;\n\n  log.info({\n    configuration: global.GLOBAL_AGENT\n  }, 'global agent has been initialized');\n\n  const isProxyConfigured = () => {\n    return global.GLOBAL_AGENT.HTTP_PROXY;\n  };\n\n  const mustUrlUseProxy = (url) => {\n    if (!global.GLOBAL_AGENT.HTTP_PROXY) {\n      return false;\n    }\n\n    if (!global.GLOBAL_AGENT.NO_PROXY) {\n      return true;\n    }\n\n    return !isUrlMatchingNoProxy(url, global.GLOBAL_AGENT.NO_PROXY);\n  };\n\n  const getUrlProxy = () => {\n    if (!global.GLOBAL_AGENT.HTTP_PROXY) {\n      throw new UnexpectedStateError('HTTP proxy must be configured.');\n    }\n\n    return parseProxyUrl(global.GLOBAL_AGENT.HTTP_PROXY);\n  };\n\n  const eventEmitter = new EventEmitter();\n\n  const httpAgent = new HttpProxyAgent(\n    isProxyConfigured,\n    mustUrlUseProxy,\n    getUrlProxy,\n    http.globalAgent,\n    eventEmitter\n  );\n\n  const httpsAgent = new HttpsProxyAgent(\n    isProxyConfigured,\n    mustUrlUseProxy,\n    getUrlProxy,\n    https.globalAgent,\n    eventEmitter\n  );\n\n  // Overriding globalAgent was added in v11.7.\n  // @see https://nodejs.org/uk/blog/release/v11.7.0/\n  if (semver.gte(process.version, 'v11.7.0')) {\n    // @see https://github.com/facebook/flow/issues/7670\n    // $FlowFixMe\n    http.globalAgent = httpAgent;\n\n    // $FlowFixMe\n    https.globalAgent = httpsAgent;\n  } else {\n    // $FlowFixMe\n    http.get = bindHttpMethod(http.get, httpAgent);\n\n    // $FlowFixMe\n    http.request = bindHttpMethod(http.request, httpAgent);\n\n    // $FlowFixMe\n    https.get = bindHttpMethod(https.get, httpsAgent);\n\n    // $FlowFixMe\n    https.request = bindHttpMethod(https.request, httpsAgent);\n  }\n};\n"],"file":"bootstrap.js"}